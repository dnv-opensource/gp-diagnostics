[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "gp-diagnostics"
version = "0.1.0"
description = "Tools for diagnosing Gaussian Process models"
readme = "README.md"
authors = [
    { name = "Christian Agrell", email = "christian.agrell@dnv.com" },
    { name = "Magnus Kristiansen", email = "magnus.kristiansen@dnv.com" },
]
requires-python = ">=3.10"
license = {file = "LICENSE"}
dependencies = [
    "numpy>=2.2.2",
    "pandas>=2.2.3",
    "plotly>=5.24.1",
    "scipy>=1.15.1",
]

[dependency-groups]
dev = [
    "gpytorch>=1.13",
    "jupyter>=1.1.1",
    "matplotlib>=3.10.0",
    "pytest>=8.3.4",
    "tox>=4.24.1",
    "tox-uv>=1.20.1",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812",  # Missing trailing comma
    "ISC001",  # Single line implicit string concatination
    "N802",  # Function name should be lowercase
    "N803",  # Argument name should be lowercase
    "N806",  # Variable in function should be lowercase
    "PLR0912",  # Too many branches
    "PLR0913",  # Too many arguments in function definition
    "PLR0915",  # Too many statements
    "C901",  # Function is too complex
    "PT018",  # Assertion should be broken down into multiple parts
    # TODO: fix the ones below, then remove them from the ignore list
    "D",  # Docstrings
    "ANN",  # Type annotations
    "FBT002",  # Boolean default positional argument in function definition
    "NPY",  # NumPy stuff
    "FBT003",  # Boolean positional value in function call
    "PT011",  # `pytest.raises(Exception)` is too broad, set the `match` parameter or use a more specific exception
    "B017",  # Do not assert blind exception: `Exception`
    "PT012",  # `pytest.raises()` block should contain a single simple statement
    "S101",  # Use of `assert` detected
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]  # Ignore assert statements in tests
"!src/**.py" = ["D"]  # Ignore docstrings everywhere except for the `src/` directory.
"examples/*" = ["T201"]  # Ignore print statement violations in examples

[tool.ruff.lint.pydocstyle]
convention = "google"
